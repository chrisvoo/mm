version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    # This makes nginx reload its configuration (and certificates) every six hours in the background and launches nginx in the foreground.  
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    # This will check if your certificate is up for renewal every 12 hours as recommended by Letâ€™s Encrypt.
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  gateway:
    image: "node:16"
    container_name: gateway
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - ./gateway:/home/node/app
    expose:
      - "3000"
    command: "npm run dev"
    depends_on:
      - nginx  
  filemanager:
    container_name: filemanager
    build:
      context: filemanager
      dockerfile: Dockerfile
    image: filemanager:latest
    ports:
      - 3001:8080
    depends_on:
      - nginx
      - mysql
  mysql:
    container_name: mysql
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./data/mysql/conf.d:/etc/mysql/conf.d
      - ./data/mysql/storage:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD: example
    ports:
      - 3306:3306    
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080   
    depends_on:
      - mysql   
